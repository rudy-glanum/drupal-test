name: CI

on:
  push:
    branches: ['feature/ci']

jobs:
  build:
    name: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Compile CSS and Javascript
        run: |
          npm ci
          npm run build

      - name: Configure PHP 8.0
        uses: shivammathur/setup-php@master
        with:
          php-version: '8.2.6'

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Install dependencies
        run: composer install --no-dev --prefer-dist --no-progress

      - name: Create deployment artifact
        env:
          GITHUB_SHA: ${{ github.sha }}
        run: tar -czf "${GITHUB_SHA}".tar.gz --exclude=*.git --exclude=node_modules --exclude=.husky --exclude=commitlint.config.js --exclude=git-precommit-checks.config.js --exclude=webpack.mix.js *

      - name: Store artifact for distribution
        uses: actions/upload-artifact@v3
        with:
          name: app-build
          path: ${{ github.sha }}.tar.gz

      # //
  # prepare-release-on-servers:
  #   name: 'prepare release'
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - uses: actions/download-artifact@v3
  #       with:
  #         name: app-build
  #     - name: Upload
  #       uses: appleboy/scp-action@master
  #       with:
  #         host: ${{ secrets.HOST }}
  #         username: ${{ secrets.USERNAME }}
  #         password: ${{ secrets.PASSWORD }}
  #         port: ${{ secrets.PORT }}
  #         source: ${{ github.sha }}.tar.gz
  #         target: ${{ secrets.PATH }}/artifacts

  #     - name: Extract archive and create directories
  #       uses: appleboy/ssh-action@master
  #       env:
  #         GITHUB_SHA: ${{ github.sha }}
  #       with:
  #         host: ${{ secrets.HOST }}
  #         username: ${{ secrets.USERNAME }}
  #         password: ${{ secrets.PASSWORD }}
  #         port: ${{ secrets.PORT }}
  #         envs: GITHUB_SHA
  #         script: |
  #           mkdir -p "${{ secrets.PATH }}/www/releases/${GITHUB_SHA}"
  #           tar xzf ${{ secrets.PATH}}/artifacts/${GITHUB_SHA}.tar.gz -C "${{ secrets.PATH}}/www/releases/${GITHUB_SHA}"

  # run-before-hooks:
  #   name: 'Before hook'
  #   runs-on: ubuntu-latest
  #   needs: [prepare-release-on-servers]
  #   steps:
  #     - name: Run before hooks
  #       uses: appleboy/ssh-action@master
  #       env:
  #         GITHUB_SHA: ${{ github.sha }}
  #         RELEASE_PATH: ${{ secrets.PATH }}/www/releases/${{ github.sha }}
  #         ACTIVE_RELEASE_PATH: ${{ secrets.PATH }}/www/current
  #         BASE_PATH: ${{ secrets.PATH }}
  #       with:
  #         host: ${{ secrets.HOST }}
  #         username: ${{ secrets.USERNAME}}
  #         password: ${{ secrets.PASSWORD }}
  #         port: ${{ secrets.PORT}}
  #         envs: GITHUB_SHA,RELEASE_PATH,ACTIVE_RELEASE_PATH,BASE_PATH
  #         script: |
  #           echo before activating release

  # activate-release:
  #   name: 'Activate release'
  #   runs-on: ubuntu-latest
  #   needs: [prepare-release-on-servers, run-before-hooks]
  #   steps:
  #     - name: Activate release
  #       uses: appleboy/ssh-action@master
  #       env:
  #         GITHUB_SHA: ${{ github.sha }}
  #         RELEASE_PATH: ./releases/${{ github.sha }}/web
  #         ACTIVE_RELEASE_PATH: ${{ secrets.PATH }}/www/current
  #         BASE_PATH: ${{ secrets.PATH }}
  #       with:
  #         host: ${{ secrets.HOST }}
  #         username: ${{ secrets.USERNAME}}
  #         password: ${{ secrets.PASSWORD }}
  #         port: ${{ secrets.PORT}}
  #         envs: GITHUB_SHA,RELEASE_PATH,ACTIVE_RELEASE_PATH,BASE_PATH,ENV_PATH
  #         script: |
  #           cd ${{ secrets.PATH }}/www
  #           ln -s -n -f $RELEASE_PATH $ACTIVE_RELEASE_PATH

  # run-after-hooks:
  #   name: 'After hook'
  #   runs-on: ubuntu-latest
  #   needs: [prepare-release-on-servers, run-before-hooks, activate-release]
  #   steps:
  #     - name: Run after hooks
  #       uses: appleboy/ssh-action@master
  #       env:
  #         GITHUB_SHA: ${{ github.sha }}
  #         RELEASE_PATH: ${{ secrets.PATH }}/www/releases/${{ github.sha }}
  #         ACTIVE_RELEASE_PATH: ${{ secrets.PATH }}/www/current
  #         BASE_PATH: ${{ secrets.PATH }}
  #       with:
  #         host: ${{ secrets.HOST }}
  #         username: ${{ secrets.USERNAME}}
  #         password: ${{ secrets.PASSWORD }}
  #         port: ${{ secrets.PORT}}
  #         envs: GITHUB_SHA,RELEASE_PATH,ACTIVE_RELEASE_PATH,BASE_PATH
  #         script: |
  #           echo after activating release

  # clean-up:
  #   name: 'Clean up'
  #   runs-on: ubuntu-latest
  #   needs: [prepare-release-on-servers, run-before-hooks, activate-release, run-after-hooks]
  #   steps:
  #     - name: Run after hooks
  #       uses: appleboy/ssh-action@master
  #       env:
  #         RELEASES_PATH: ${{ secrets.PATH }}/www/releases
  #         ARTIFACTS_PATH: ${{ secrets.PATH }}/artifacts
  #       with:
  #         host: ${{ secrets.HOST }}
  #         username: ${{ secrets.USERNAME}}
  #         password: ${{ secrets.PASSWORD }}
  #         port: ${{ secrets.PORT}}
  #         envs: RELEASES_PATH
  #         script: |
  #           cd $RELEASES_PATH && ls -t -1 | tail -n +3 | xargs rm -rf
  #           cd $ARTIFACTS_PATH && ls -t -1 | tail -n +3 | xargs rm -rf
